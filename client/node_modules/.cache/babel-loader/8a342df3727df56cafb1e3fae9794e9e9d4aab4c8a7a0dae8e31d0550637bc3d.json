{"ast":null,"code":"const SET_FILES = \"SET_FILES\";\nconst SET_CURRENT_DIR = \"SET_CURRENT_DIR\";\nconst ADD_FILE = \"ADD_FILE\";\nconst SET_POPUP_DISPLAY = \"SET_POPUP_DISPLAY\";\nconst PUSH_TO_STACK = \"PUSH_TO_STACK\";\nconst DELETE_FILE = 'DELETE_FILE';\nconst SET_VIEW = 'SET_VIEW';\nconst defaultState = {\n  files: [],\n  currentDir: null,\n  popupDisplay: 'none',\n  dirStack: [],\n  view: 'list'\n};\nexport default function fileReducer(state = defaultState, action) {\n  switch (action.type) {\n    case SET_FILES:\n      return {\n        ...state,\n        files: action.payload\n      };\n    case SET_CURRENT_DIR:\n      return {\n        ...state,\n        currentDir: action.payload\n      };\n    case ADD_FILE:\n      return {\n        ...state,\n        files: [...state.files, action.payload]\n      };\n    case SET_POPUP_DISPLAY:\n      return {\n        ...state,\n        popupDisplay: action.payload\n      };\n    case PUSH_TO_STACK:\n      return {\n        ...state,\n        dirStack: [...state.dirStack, action.payload]\n      };\n    case DELETE_FILE:\n      return {\n        ...state,\n        files: [...state.files.filter(file => file._id != action.payload)]\n      };\n    case SET_VIEW:\n      return {\n        ...state,\n        view: action.payload\n      };\n    default:\n      return state;\n  }\n}\nexport const setFiles = files => ({\n  type: SET_FILES,\n  payload: files\n});\nexport const setCurrentDir = dir => ({\n  type: SET_CURRENT_DIR,\n  payload: dir\n});\nexport const addFile = file => ({\n  type: ADD_FILE,\n  payload: file\n});\nexport const setPopupDisplay = display => ({\n  type: SET_POPUP_DISPLAY,\n  payload: display\n});\nexport const pushToStack = dir => ({\n  type: PUSH_TO_STACK,\n  payload: dir\n});\nexport const deleteFileAction = dirId => ({\n  type: DELETE_FILE,\n  payload: dirId\n});\nexport const setFileView = payload => ({\n  type: SET_VIEW,\n  payload\n});","map":{"version":3,"names":["SET_FILES","SET_CURRENT_DIR","ADD_FILE","SET_POPUP_DISPLAY","PUSH_TO_STACK","DELETE_FILE","SET_VIEW","defaultState","files","currentDir","popupDisplay","dirStack","view","fileReducer","state","action","type","payload","filter","file","_id","setFiles","setCurrentDir","dir","addFile","setPopupDisplay","display","pushToStack","deleteFileAction","dirId","setFileView"],"sources":["D:/mern-cloud-disk/cloud-disk/client/src/reducers/fileReducer.js"],"sourcesContent":["const SET_FILES = \"SET_FILES\"\r\nconst SET_CURRENT_DIR = \"SET_CURRENT_DIR\"\r\nconst ADD_FILE = \"ADD_FILE\"\r\nconst SET_POPUP_DISPLAY = \"SET_POPUP_DISPLAY\"\r\nconst PUSH_TO_STACK = \"PUSH_TO_STACK\"\r\nconst DELETE_FILE = 'DELETE_FILE'\r\nconst SET_VIEW = 'SET_VIEW'\r\n\r\nconst defaultState = {\r\n    files: [],\r\n    currentDir: null,\r\n    popupDisplay: 'none',\r\n    dirStack: [],\r\n    view: 'list'\r\n}\r\n\r\nexport default function fileReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case SET_FILES: return {...state, files: action.payload}\r\n        case SET_CURRENT_DIR: return {...state, currentDir: action.payload}\r\n        case ADD_FILE: return {...state, files: [...state.files, action.payload]}\r\n        case SET_POPUP_DISPLAY: return {...state, popupDisplay: action.payload}\r\n        case PUSH_TO_STACK: return {...state, dirStack: [...state.dirStack, action.payload]}\r\n        case DELETE_FILE: return {...state, files: [...state.files.filter(file => file._id != action.payload)]}\r\n        case SET_VIEW: return {...state, view: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setFiles = (files) => ({type: SET_FILES, payload: files})\r\nexport const setCurrentDir= (dir) => ({type: SET_CURRENT_DIR, payload: dir})\r\nexport const addFile = (file) => ({type: ADD_FILE, payload: file})\r\nexport const setPopupDisplay = (display) => ({type: SET_POPUP_DISPLAY, payload: display})\r\nexport const pushToStack = (dir) => ({type: PUSH_TO_STACK, payload: dir})\r\nexport const deleteFileAction = (dirId) => ({type: DELETE_FILE, payload: dirId})\r\nexport const setFileView = (payload) => ({type: SET_VIEW, payload})\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAW;AAC7B,MAAMC,eAAe,GAAG,iBAAiB;AACzC,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,iBAAiB,GAAG,mBAAmB;AAC7C,MAAMC,aAAa,GAAG,eAAe;AACrC,MAAMC,WAAW,GAAG,aAAa;AACjC,MAAMC,QAAQ,GAAG,UAAU;AAE3B,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,IAAI;EAChBC,YAAY,EAAE,MAAM;EACpBC,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAE;AACV,CAAC;AAED,eAAe,SAASC,WAAWA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,EAAE;EAC9D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKhB,SAAS;MAAE,OAAO;QAAC,GAAGc,KAAK;QAAEN,KAAK,EAAEO,MAAM,CAACE;MAAO,CAAC;IACxD,KAAKhB,eAAe;MAAE,OAAO;QAAC,GAAGa,KAAK;QAAEL,UAAU,EAAEM,MAAM,CAACE;MAAO,CAAC;IACnE,KAAKf,QAAQ;MAAE,OAAO;QAAC,GAAGY,KAAK;QAAEN,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAK,EAAEO,MAAM,CAACE,OAAO;MAAC,CAAC;IACzE,KAAKd,iBAAiB;MAAE,OAAO;QAAC,GAAGW,KAAK;QAAEJ,YAAY,EAAEK,MAAM,CAACE;MAAO,CAAC;IACvE,KAAKb,aAAa;MAAE,OAAO;QAAC,GAAGU,KAAK;QAAEH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAEI,MAAM,CAACE,OAAO;MAAC,CAAC;IACpF,KAAKZ,WAAW;MAAE,OAAO;QAAC,GAAGS,KAAK;QAAEN,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAK,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,IAAIL,MAAM,CAACE,OAAO,CAAC;MAAC,CAAC;IACvG,KAAKX,QAAQ;MAAE,OAAO;QAAC,GAAGQ,KAAK;QAAEF,IAAI,EAAEG,MAAM,CAACE;MAAO,CAAC;IACtD;MACI,OAAOH,KAAK;EACpB;AACJ;AAEA,OAAO,MAAMO,QAAQ,GAAIb,KAAK,KAAM;EAACQ,IAAI,EAAEhB,SAAS;EAAEiB,OAAO,EAAET;AAAK,CAAC,CAAC;AACtE,OAAO,MAAMc,aAAa,GAAGC,GAAG,KAAM;EAACP,IAAI,EAAEf,eAAe;EAAEgB,OAAO,EAAEM;AAAG,CAAC,CAAC;AAC5E,OAAO,MAAMC,OAAO,GAAIL,IAAI,KAAM;EAACH,IAAI,EAAEd,QAAQ;EAAEe,OAAO,EAAEE;AAAI,CAAC,CAAC;AAClE,OAAO,MAAMM,eAAe,GAAIC,OAAO,KAAM;EAACV,IAAI,EAAEb,iBAAiB;EAAEc,OAAO,EAAES;AAAO,CAAC,CAAC;AACzF,OAAO,MAAMC,WAAW,GAAIJ,GAAG,KAAM;EAACP,IAAI,EAAEZ,aAAa;EAAEa,OAAO,EAAEM;AAAG,CAAC,CAAC;AACzE,OAAO,MAAMK,gBAAgB,GAAIC,KAAK,KAAM;EAACb,IAAI,EAAEX,WAAW;EAAEY,OAAO,EAAEY;AAAK,CAAC,CAAC;AAChF,OAAO,MAAMC,WAAW,GAAIb,OAAO,KAAM;EAACD,IAAI,EAAEV,QAAQ;EAAEW;AAAO,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}