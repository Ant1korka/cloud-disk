{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern-cloud-disk\\\\cloud-disk\\\\client\\\\src\\\\components\\\\disk\\\\fileList\\\\FileList.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './fileList.css';\nimport { useSelector } from \"react-redux\";\nimport File from \"./file/File\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nconst FileList = () => {\n  _s();\n  const files = useSelector(state => state.files.files);\n  const fileView = useSelector(state => state.files.view);\n  if (files.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, \"\\u0424\\u0430\\u0439\\u043B\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\");\n  }\n  if (fileView === \"plate\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fileplate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, files.map(file => /*#__PURE__*/React.createElement(File, {\n      key: file._id,\n      file: file,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    })));\n  }\n  if (fileView === 'list') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filelist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filelist__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filelist__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filelist__date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, \"\\u0414\\u0430\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filelist__size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440\")), /*#__PURE__*/React.createElement(TransitionGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, files.map(file => /*#__PURE__*/React.createElement(CSSTransition, {\n      key: file._id,\n      timeout: 500,\n      classNames: 'file',\n      exit: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(File, {\n      file: file,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    })))));\n  }\n};\n_s(FileList, \"tBH+1lXhth3vGnEA7VZy8ndtXqo=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = FileList;\nexport default FileList;\nvar _c;\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"names":["React","useSelector","File","CSSTransition","TransitionGroup","FileList","_s","files","state","fileView","view","length","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","file","key","_id","timeout","classNames","exit","_c","$RefreshReg$"],"sources":["D:/mern-cloud-disk/cloud-disk/client/src/components/disk/fileList/FileList.jsx"],"sourcesContent":["import React from 'react';\r\nimport './fileList.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport File from \"./file/File\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\n\r\nconst FileList = () => {\r\n\r\n    const files = useSelector(state => state.files.files)\r\n    const fileView = useSelector(state => state.files.view)\r\n\r\n    if (files.length === 0) {\r\n        return (\r\n            <div className='loader'>Файлы не найдены</div>\r\n        )\r\n    }\r\n\r\n    if (fileView === \"plate\") {\r\n        return (\r\n            <div className='fileplate'>\r\n                {files.map(file =>\r\n                    <File key={file._id} file={file}/>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (fileView === 'list') {\r\n        return (\r\n            <div className='filelist'>\r\n                <div className=\"filelist__header\">\r\n                    <div className=\"filelist__name\">Название</div>\r\n                    <div className=\"filelist__date\">Дата</div>\r\n                    <div className=\"filelist__size\">Размер</div>\r\n                </div>\r\n                <TransitionGroup>\r\n                    {files.map(file =>\r\n                        <CSSTransition\r\n                            key={file._id}\r\n                            timeout={500}\r\n                            classNames={'file'}\r\n                            exit={false}\r\n                        >\r\n                            <File file={file}/>\r\n                        </CSSTransition>\r\n                    )}\r\n                </TransitionGroup>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default FileList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,SAAQC,WAAW,QAAO,aAAa;AACvC,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAAQC,aAAa,EAAEC,eAAe,QAAO,wBAAwB;AAErE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAMC,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EACrD,MAAME,QAAQ,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACG,IAAI,CAAC;EAEvD,IAAIH,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE;IACpB,oBACIX,KAAA,CAAAY,aAAA;MAAKC,SAAS,EAAC,QAAQ;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,wFAAqB,CAAC;EAEtD;EAEA,IAAIV,QAAQ,KAAK,OAAO,EAAE;IACtB,oBACIT,KAAA,CAAAY,aAAA;MAAKC,SAAS,EAAC,WAAW;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACrBZ,KAAK,CAACa,GAAG,CAACC,IAAI,iBACXrB,KAAA,CAAAY,aAAA,CAACV,IAAI;MAACoB,GAAG,EAAED,IAAI,CAACE,GAAI;MAACF,IAAI,EAAEA,IAAK;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAC,CACrC,CACC,CAAC;EAEd;EAEA,IAAIV,QAAQ,KAAK,MAAM,EAAE;IACrB,oBACIT,KAAA,CAAAY,aAAA;MAAKC,SAAS,EAAC,UAAU;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrBnB,KAAA,CAAAY,aAAA;MAAKC,SAAS,EAAC,kBAAkB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC7BnB,KAAA,CAAAY,aAAA;MAAKC,SAAS,EAAC,gBAAgB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,kDAAa,CAAC,eAC9CnB,KAAA,CAAAY,aAAA;MAAKC,SAAS,EAAC,gBAAgB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,0BAAS,CAAC,eAC1CnB,KAAA,CAAAY,aAAA;MAAKC,SAAS,EAAC,gBAAgB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,sCAAW,CAC1C,CAAC,eACNnB,KAAA,CAAAY,aAAA,CAACR,eAAe;MAAAU,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACXZ,KAAK,CAACa,GAAG,CAACC,IAAI,iBACXrB,KAAA,CAAAY,aAAA,CAACT,aAAa;MACVmB,GAAG,EAAED,IAAI,CAACE,GAAI;MACdC,OAAO,EAAE,GAAI;MACbC,UAAU,EAAE,MAAO;MACnBC,IAAI,EAAE,KAAM;MAAAZ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAEZnB,KAAA,CAAAY,aAAA,CAACV,IAAI;MAACmB,IAAI,EAAEA,IAAK;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAC,CACP,CACnB,CACa,CAChB,CAAC;EAEd;AAEJ,CAAC;AAACb,EAAA,CA7CID,QAAQ;EAAA,QAEIJ,WAAW,EACRA,WAAW;AAAA;AAAA0B,EAAA,GAH1BtB,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}